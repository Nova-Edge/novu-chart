# yaml-language-server: $schema=https://raw.githubusercontent.com/Nova-Edge/novu-chart/refs/heads/main/charts/novu/values.schema.json

ingress:
  enabled: false
  className: ""
  annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  host: chart-example.local
  tls:
    secretName: novu-tls


service:
  type: ClusterIP

web:
  replicaCount: 1
  image:
    repository: ghcr.io/novuhq/novu/web
    pullPolicy: IfNotPresent
    tag: ""
  port: 4200
  resources: { }
  widgets:
    embedPath: http://localhost:4701/embed.umd.min.js
    url: http://localhost:4500

api:
  replicaCount: 1
  image:
    repository: ghcr.io/novuhq/novu/api
    pullPolicy: IfNotPresent
    tag: ""
  port: 3000
  resources: { }
  contextPath: ""

worker:
  replicaCount: 1
  image:
    repository: ghcr.io/novuhq/novu/worker
    pullPolicy: IfNotPresent
    tag: ""
  resources: { }
  broadcastQueueChunkSize: 100
  multicastQueueChunkSize: 100

ws:
  replicaCount: 1
  image:
    repository: ghcr.io/novuhq/novu/ws
    pullPolicy: IfNotPresent
    tag: ""
  port: 3002
  contextPath: ""
  resources: { }

global:
  imagePullSecrets: [ ]
  env:
    nodeEnv: production
    mongodb:
      maxPoolSize: 200
      minPoolSize: 75
    secret:
      novuSecretKey: your-secret
      jwtSecret: your-secret
      storageKey: <ENCRYPTION_KEY_MUST_BE_32_LONG>
    s3:
      localStack: false
      bucketName: your-bucket-name
      region: your-region
    aws:
      accessKeyId: your-access-key-id
      secretAccessKey: your-secret-access-key
    sentry:
      dsn: your-sentry-dsn
    newRelic:
      appName: your-new-relic-app-name
      licenseKey: your-new-relic-license-key
    apiRootUrl: http://localhost:3000
    disableUserRegistration: false
    frontBaseUrl: http://localhost:4200

redis:
  enabled: true
  replica:
    replicaCount: 1

mongodb:
  enabled: true
  serviceBindings:
    enabled: true
